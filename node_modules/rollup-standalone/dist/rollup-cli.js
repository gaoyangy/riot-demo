#!/usr/bin/env node
"use strict";function _interopDefault$1(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function hasKey(e,n){var r=e;return n.slice(0,-1).forEach(function(e){r=r[e]||{}}),n[n.length-1]in r}function isNumber(e){return"number"==typeof e||(!!/^0x[0-9a-f]+$/i.test(e)||/^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e))}function createCommonjsModule(e,n){return n={exports:{}},e(n,n.exports),n.exports}function Chalk(e){this.enabled=e&&void 0!==e.enabled?e.enabled:supportsColor}function build(e){var n=function(){return applyStyle.apply(n,arguments)};return n._styles=e,n.enabled=this.enabled,n.__proto__=proto,n}function applyStyle(){var e=arguments,n=e.length,r=0!==n&&String(arguments[0]);if(n>1)for(var o=1;o<n;o++)r+=" "+e[o];if(!this.enabled||!r)return r;var t=this._styles,s=t.length,i=ansiStyles.dim.open;for(!isSimpleWindowsTerm||-1===t.indexOf("gray")&&-1===t.indexOf("grey")||(ansiStyles.dim.open="");s--;){var a=ansiStyles[t[s]];r=a.open+r.replace(a.closeRe,a.open)+a.close}return ansiStyles.dim.open=i,r}function init(){var e={};return Object.keys(styles).forEach(function(n){e[n]={get:function(){return build.call(this,[n])}}}),e}function isAbsolute(e){return absolutePath.test(e)}function relativeId(e){return"undefined"!=typeof process&&isAbsolute(e)?path.relative(process.cwd(),e):e}function log(e,n){var r=(e.plugin?"("+e.plugin+" plugin) "+e.message:e.message)||e;stderr(""+n+index$3.bold(r)),e.url&&stderr(index$3.cyan(e.url)),e.loc?stderr(relativeId(e.loc.file)+" ("+e.loc.line+":"+e.loc.column+")"):e.id&&stderr(relativeId(e.id)),e.frame&&stderr(index$3.dim(e.frame)),stderr("")}function handleWarning(e){log(e,warnSymbol)}function handleError(e,n){log(e,errorSymbol),n||process.exit(1)}function runRollup(e){e._.length>1&&handleError({code:"ONE_AT_A_TIME",message:"rollup can only bundle one file at a time"}),1===e._.length&&(e.input&&handleError({code:"DUPLICATE_IMPORT_OPTIONS",message:"use --input, or pass input path as argument"}),e.input=e._[0]),e.environment&&e.environment.split(",").forEach(function(e){var n=e.indexOf(":");~n?process.env[e.slice(0,n)]=e.slice(n+1):process.env[e]=!0});var n=!0===e.config?"rollup.config.js":e.config;if(n){if("node:"===n.slice(0,5)){var r=n.slice(5);try{n=index$2.resolve("rollup-config-"+r,process.cwd())}catch(e){try{n=index$2.resolve(r,process.cwd())}catch(e){throw"MODULE_NOT_FOUND"===e.code&&handleError({code:"MISSING_EXTERNAL_CONFIG",message:"Could not resolve config file "+n}),e}}}else n=fs.realpathSync(n);rollup.rollup({entry:n,onwarn:function(e){"UNRESOLVED_IMPORT"!==e.code&&handleWarning(e)}}).then(function(r){var o=r.generate({format:"cjs"}).code,t=require.extensions[".js"];require.extensions[".js"]=function(e,r){r===n?e._compile(o,r):t(e,r)};var s=require(n);(Array.isArray(s)?s:[s]).forEach(function(n){0===Object.keys(n).length&&handleError({code:"MISSING_CONFIG",message:"Config file must export an options object",url:"https://github.com/rollup/rollup/wiki/Command-Line-Interface#using-a-config-file"}),execute(n,e)}),require.extensions[".js"]=t}).catch(handleError)}else execute({},e)}function execute(e,n){var r,o=(n.external||"").split(","),t=e.external;if(n.globals){var s=Object.create(null);n.globals.split(",").forEach(function(e){var n=e.split(":");s[n[0]]=n[1],-1===o.indexOf(n[0])&&o.push(n[0])}),n.globals=s}if(r="function"==typeof t?function(e){return t(e)||~o.indexOf(e)}:(t||[]).concat(o),n.silent&&(e.onwarn=function(){}),!e.onwarn){var i=new Set;e.onwarn=function(e){var n=e.toString();i.has(n)||(i.add(n),handleWarning(e))}}if(e.external=r,Object.keys(equivalents).forEach(function(r){n.hasOwnProperty(r)&&(e[equivalents[r]]=n[r])}),n.watch){e.entry&&(e.dest||e.targets)||handleError({code:"WATCHER_MISSING_INPUT_OR_OUTPUT",message:"must specify --input and --output when using rollup --watch"});try{index$2("rollup-watch",process.cwd())(rollup,e).on("event",function(e){switch(e.code){case"STARTING":stderr("checking rollup-watch version...");break;case"BUILD_START":stderr("bundling...");break;case"BUILD_END":stderr("bundled in "+e.duration+"ms. Watching for changes...");break;case"ERROR":handleError(e.error,!0);break;default:stderr("unknown event",e)}})}catch(e){"MODULE_NOT_FOUND"===e.code&&handleError({code:"ROLLUP_WATCH_NOT_INSTALLED",message:"rollup --watch depends on the rollup-watch package, which could not be found. Install it with npm install -D rollup-watch"}),handleError(e)}}else bundle(e).catch(handleError)}function clone(e){return assign({},e)}function assign(e,n){return Object.keys(n).forEach(function(r){e[r]=n[r]}),e}function bundle(e){return e.entry||handleError({code:"MISSING_INPUT_OPTION",message:"You must specify an --input (-i) option"}),rollup.rollup(e).then(function(n){if(e.dest)return n.write(e);if(e.targets){var r=null;return e.targets.forEach(function(o){r=n.write(assign(clone(e),o))}),r}e.sourceMap&&"inline"!==e.sourceMap&&handleError({code:"MISSING_OUTPUT_OPTION",message:"You must specify an --output (-o) option when creating a file with a sourcemap"});var o=n.generate(e),t=o.code,s=o.map;"inline"===e.sourceMap&&(t+="\n//# "+SOURCEMAPPING_URL$1+"="+s.toUrl()+"\n"),process.stdout.write(t)}).catch(handleError)}var fs=require("fs"),rollup=require("./rollup-standalone"),path=require("path"),path__default=_interopDefault$1(path),module$1=_interopDefault$1(require("module")),sourceMapSupport=require("./source-map-support"),index$1=function(e,n){function r(e,n){return i.allBools&&/^--[^=]+$/.test(n)||i.strings[e]||i.bools[e]||a[e]}function o(e,n,o){if(!o||!i.unknownFn||r(e,o)||!1!==i.unknownFn(o)){var s=!i.strings[e]&&isNumber(n)?Number(n):n;t(u,e.split("."),s),(a[e]||[]).forEach(function(e){t(u,e.split("."),s)})}}function t(e,n,r){var o=e;n.slice(0,-1).forEach(function(e){void 0===o[e]&&(o[e]={}),o=o[e]});var t=n[n.length-1];void 0===o[t]||i.bools[t]||"boolean"==typeof o[t]?o[t]=r:Array.isArray(o[t])?o[t].push(r):o[t]=[o[t],r]}function s(e){return a[e].some(function(e){return i.bools[e]})}n||(n={});var i={bools:{},strings:{},unknownFn:null};"function"==typeof n.unknown&&(i.unknownFn=n.unknown),"boolean"==typeof n.boolean&&n.boolean?i.allBools=!0:[].concat(n.boolean).filter(Boolean).forEach(function(e){i.bools[e]=!0});var a={};Object.keys(n.alias||{}).forEach(function(e){a[e]=[].concat(n.alias[e]),a[e].forEach(function(n){a[n]=[e].concat(a[e].filter(function(e){return n!==e}))})}),[].concat(n.string).filter(Boolean).forEach(function(e){i.strings[e]=!0,a[e]&&(i.strings[a[e]]=!0)});var l=n.default||{},u={_:[]};Object.keys(i.bools).forEach(function(e){o(e,void 0!==l[e]&&l[e])});var c=[];-1!==e.indexOf("--")&&(c=e.slice(e.indexOf("--")+1),e=e.slice(0,e.indexOf("--")));for(var p=0;p<e.length;p++){var d=e[p];if(/^--.+=/.test(d)){var f=d.match(/^--([^=]+)=([\s\S]*)$/),h=f[1],g=f[2];i.bools[h]&&(g="false"!==g),o(h,g,d)}else if(/^--no-.+/.test(d))o(h=d.match(/^--no-(.+)/)[1],!1,d);else if(/^--.+/.test(d)){h=d.match(/^--(.+)/)[1];void 0===(y=e[p+1])||/^-/.test(y)||i.bools[h]||i.allBools||a[h]&&s(h)?/^(true|false)$/.test(y)?(o(h,"true"===y,d),p++):o(h,!i.strings[h]||"",d):(o(h,y,d),p++)}else if(/^-[^-]+/.test(d)){for(var m=d.slice(1,-1).split(""),b=!1,v=0;v<m.length;v++){var y=d.slice(v+2);if("-"!==y){if(/[A-Za-z]/.test(m[v])&&/=/.test(y)){o(m[v],y.split("=")[1],d),b=!0;break}if(/[A-Za-z]/.test(m[v])&&/-?\d+(\.\d*)?(e-?\d+)?$/.test(y)){o(m[v],y,d),b=!0;break}if(m[v+1]&&m[v+1].match(/\W/)){o(m[v],d.slice(v+2),d),b=!0;break}o(m[v],!i.strings[m[v]]||"",d)}else o(m[v],y,d)}h=d.slice(-1)[0];b||"-"===h||(!e[p+1]||/^(-|--)[^-]/.test(e[p+1])||i.bools[h]||a[h]&&s(h)?e[p+1]&&/true|false/.test(e[p+1])?(o(h,"true"===e[p+1],d),p++):o(h,!i.strings[h]||"",d):(o(h,e[p+1],d),p++))}else if(i.unknownFn&&!1===i.unknownFn(d)||u._.push(i.strings._||!isNumber(d)?d:Number(d)),n.stopEarly){u._.push.apply(u._,e.slice(p+1));break}}return Object.keys(l).forEach(function(e){hasKey(u,e.split("."))||(t(u,e.split("."),l[e]),(a[e]||[]).forEach(function(n){t(u,n.split("."),l[e])}))}),n["--"]?(u["--"]=new Array,c.forEach(function(e){u["--"].push(e)})):c.forEach(function(e){u._.push(e)}),u},help="rollup version __VERSION__\n=====================================\n\nUsage: rollup [options] <entry file>\n\nBasic options:\n\n-v, --version            Show version number\n-h, --help               Show this help message\n-c, --config             Use this config file (if argument is used but value\n                           is unspecified, defaults to rollup.config.js)\n-w, --watch              Watch files in bundle and rebuild on changes\n-i, --input              Input (alternative to <entry file>)\n-o, --output <output>    Output (if absent, prints to stdout)\n-f, --format [es]       Type of output (amd, cjs, es, iife, umd)\n-e, --external           Comma-separate list of module IDs to exclude\n-g, --globals            Comma-separate list of `module ID:Global` pairs\n                            Any module IDs defined here are added to external\n-n, --name               Name for UMD export\n-u, --id                 ID for AMD module (default is anonymous)\n-m, --sourcemap          Generate sourcemap (`-m inline` for inline map)\n--no-strict              Don't emit a `\"use strict\";` in the generated modules.\n--no-indent              Don't indent result\n--environment <values>   Settings passed to config file (see example)\n--no-conflict            Generate a noConflict method for UMD globals\n--silent                 Don't print warnings\n--intro                  Content to insert at top of bundle (inside wrapper)\n--outro                  Content to insert at end of bundle (inside wrapper)\n--banner                 Content to insert at top of bundle (outside wrapper)\n--footer                 Content to insert at end of bundle (outside wrapper)\n\nExamples:\n\n# use settings in config file\nrollup -c\n\n# in config file, process.env.INCLUDE_DEPS === 'true'\n# and process.env.BUILD === 'production'\nrollup -c --environment INCLUDE_DEPS,BUILD:production\n\n# create CommonJS bundle.js from src/main.js\nrollup --format=cjs --output=bundle.js -- src/main.js\n\n# create self-executing IIFE using `window.jQuery`\n# and `window._` as external globals\nrollup -f iife --globals jquery:jQuery,lodash:_ \\\n  -i src/app.js -o build/app.js -m build/app.js.map\n\nNotes:\n\n* When piping to stdout, only inline sourcemaps are permitted\n\nFor more information visit https://github.com/rollup/rollup/wiki\n",version="0.42.0",path$1=path__default,Module=module$1,modules={},getModule=function(e){var n=e?path$1.resolve(e):process.cwd(),r=path$1.join(n,"@root"),o=modules[r];return o||((o=new Module(r)).filename=r,o.paths=Module._nodeModulePaths(n),modules[r]=o),o},requireRelative=function(e,n){return getModule(n).require(e)};requireRelative.resolve=function(e,n){var r=getModule(n);return Module._resolveFilename(e,r)};var index$2=requireRelative,matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g,index$4=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(matchOperatorsRe,"\\$&")},index$6=createCommonjsModule(function(e){function n(){var e={modifiers:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},colors:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39]},bgColors:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49]}};return e.colors.grey=e.colors.gray,Object.keys(e).forEach(function(n){var r=e[n];Object.keys(r).forEach(function(n){var o=r[n];e[n]=r[n]={open:"["+o[0]+"m",close:"["+o[1]+"m"}}),Object.defineProperty(e,n,{value:r,enumerable:!1})}),e}Object.defineProperty(e,"exports",{enumerable:!0,get:n})}),index$10=function(){return/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g},ansiRegex=index$10(),index$8=function(e){return"string"==typeof e?e.replace(ansiRegex,""):e},ansiRegex$1=index$10,re=new RegExp(ansiRegex$1().source),index$12=re.test.bind(re),argv=process.argv,terminator=argv.indexOf("--"),hasFlag=function(e){e="--"+e;var n=argv.indexOf(e);return-1!==n&&(-1===terminator||n<terminator)},index$14=function(){return"FORCE_COLOR"in process.env||!(hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false"))&&(!!(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always"))||!(process.stdout&&!process.stdout.isTTY)&&("win32"===process.platform||("COLORTERM"in process.env||"dumb"!==process.env.TERM&&!!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM))))}(),escapeStringRegexp=index$4,ansiStyles=index$6,stripAnsi=index$8,hasAnsi=index$12,supportsColor=index$14,defineProps=Object.defineProperties,isSimpleWindowsTerm="win32"===process.platform&&!/^xterm/i.test(process.env.TERM);isSimpleWindowsTerm&&(ansiStyles.blue.open="[94m");var styles=function(){var e={};return Object.keys(ansiStyles).forEach(function(n){ansiStyles[n].closeRe=new RegExp(escapeStringRegexp(ansiStyles[n].close),"g"),e[n]={get:function(){return build.call(this,this._styles.concat(n))}}}),e}(),proto=defineProps(function(){},styles);defineProps(Chalk.prototype,init());var index$3=new Chalk,styles_1=ansiStyles,hasColor=hasAnsi,stripColor=stripAnsi,supportsColor_1=supportsColor;index$3.styles=styles_1,index$3.hasColor=hasColor,index$3.stripColor=stripColor,index$3.supportsColor=supportsColor_1;var absolutePath=/^(?:\/|(?:[A-Za-z]:)?[\\|\/])/;process.stderr.isTTY||(index$3.enabled=!1);var warnSymbol=process.stderr.isTTY?"⚠️   ":"Warning: ",errorSymbol=process.stderr.isTTY?"🚨   ":"Error: ",stderr=console.error.bind(console),SOURCEMAPPING_URL="sourceMa",SOURCEMAPPING_URL$1=SOURCEMAPPING_URL+="ppingURL";sourceMapSupport.install();var equivalents={useStrict:"useStrict",banner:"banner",footer:"footer",format:"format",globals:"globals",id:"moduleId",indent:"indent",input:"entry",intro:"intro",legacy:"legacy",name:"moduleName",output:"dest",outro:"outro",sourcemap:"sourceMap",treeshake:"treeshake"},command=index$1(process.argv.slice(2),{alias:{strict:"useStrict",c:"config",d:"indent",e:"external",f:"format",g:"globals",h:"help",i:"input",l:"legacy",m:"sourcemap",n:"name",o:"output",u:"id",v:"version",w:"watch"}});command.help||process.argv.length<=2&&process.stdin.isTTY?console.log("\n"+help.replace("__VERSION__",version)+"\n"):command.version?console.log("rollup version "+version):runRollup(command);
